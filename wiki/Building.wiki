#summary How to build MacVim
#labels Featured,Phase-Implementation

===For the impatient===

Here is the summary on what you need to do:
  * Get the vim7 source
  * Check out the !MacVim source from the Google code repository and put it inside `vim7/src/MacVim`
  * Download the latest patch archive `patch-r*.tar.gz` from the 'Downloads' tab.  This archive contains `macvim.diff`, `gui_macvim.pro`.  Apply the patch to the vim7 source code and put `gui_macvim.pro` inside `vim7/src/proto`
  * Build Vim with `configure --enable-gui=macvim` and then `make`
  * Open `MacVim/MacVim.xcodeproj` and build it

If those instructions were not enough, then read on...


===The long version===

First download the latest patch archive `patch-r*.tar.gz` from the `Downloads` tab.  Unarchive the files `macvim.diff` and `gui_macvim.h` to the Desktop (you can put them wherever, but in what follows I will assume you put them there).

Next, you need to get the Vim source code.  In order to do this, start Terminal and type
{{{
localhost:~ user$ svn co https://vim.svn.sourceforge.net/svnroot/vim/vim7
}}}
This will create the folder vim7 and populate it with the Vim source (be patient, it can take a while).

Next, you need to patch the Vim source and copy the prototype header file. This can be done by typing
{{{
localhost:~ user$ cd vim7/src
localhost:~ user$ cp ~/Desktop/macvim.diff .
localhost:~ user$ cp ~/Desktop/gui_macvim.pro proto/
localhost:~ user$ patch -p0 -i macvim.diff
}}}

The next thing is to download the !MacVim source and put it in the `vim7/src` folder as follows:
{{{
localhost:~/vim7/src user$ svn co http://macvim.googlecode.com/svn/trunk/ MacVim
}}}

Now, build Vim 
{{{
localhost:~ user$ autoconf
localhost:~ user$ ./configure --enable-gui=macvim
localhost:~ user$ make
}}}
This should produce an executable named `Vim` in the `vim7/src` folder. You can run it in terminal mode (no `-g` switch) and type `:ver` to confirm that it includes the !MacVim GUI code (although we are _not_ done yet).

Finally, open `MacVim.xcodeproj` (which is inside the `MacVim` folder), and click the 'Build' button (Cmd+B).  This will build the application bundle `MacVim.app` inside `build/Release` (or `build/Debug`, depending on which build configuration is active).

That's it!


===Building !MacVim whilst using it to code===

If you have one version of !MacVim in e.g. `/Applications` and then build another with Xcode and try to run it, there will be trouble (since both are listening to the same named port for new Vim connections).  To get around this do the following (assuming you have installed !MacVim in the Applications folder):
  * Open a Finder window on `/Applications`
  * Rename `MacVim` to `MacVim-devel`
  * Ctrl-click on the `MacVim-devel` icon and choose 'Show Package Contents'
  * In the window that opens, double-click on `Contents` and then on `Info.plist`; this will bring up the 'Property List Editor'
  * Expand `Root`, change `CFBundleIdentifier` to `org.vim.MacVim-devel`, and change `CFBundleName` to `MacVim-devel`; save and quit the 'Property List Editor'

You can now run !MacVim-devel whilst building and running !MacVim in Xcode.


===Building a universal binary===

By default only a native binary will be built.  To build a universal binary you must first pass `--with-mac-arch=both` to `configure` and then edit the build settings for _both_ `MacVim.xcodeproj` and `PSMTabBarControl.xcodeproj`.  This is how you change the build settings in Xcode:
  * Select `MacVim` under `Targets` in the left-hand column in Xcode, then press Cmd-I to open up the 'Info' window
  * Click the `Build` tab and locate the `Architectures` setting, double-click on it and select both `PowerPC` and `Intel`
  * Do the same for the PSMTabBarControlProject
